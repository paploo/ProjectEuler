% Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
% By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

- module(main).
- export([start/0]).

start() ->
	code:add_patha("../lib"),
	problem:check(2+8+34, fun () -> sum(89) end),
	problem:run(4613732, fun() -> sum(4000000) end).

sum(Max) ->
	fib_sum(1, 2, 2, Max).

% A and B are the last two terms in the fib sequence, Sum is the running sum, and Max is the maximum value
fib_sum(A, B, Sum, Max) when A+B > Max ->
	Sum;
fib_sum(A, B, Sum, Max) when (A+B) rem 2 =:= 0 ->
	C = A+B,
	fib_sum(B, C, Sum+C, Max);
fib_sum(A, B, Sum, Max) ->
	fib_sum(B, A+B, Sum, Max).
	